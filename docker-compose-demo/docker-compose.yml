version: '3.8'

services:
  db:
    image: ${POSTGRES_IMAGE:-postgres:16}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready
      interval: 10s
      start_period: 10s
    restart: unless-stopped

  redis:
    image: ${REDIS_IMAGE:-redis:7-alpine}
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
    restart: unless-stopped

  api:
    build: ./api
    ports:
      - "${SERVER_PORT:-8080}:5000"
    environment:
      POSTGRES_HOST: db
      REDIS_HOST: redis
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PYTHONUNBUFFERED: 1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16 